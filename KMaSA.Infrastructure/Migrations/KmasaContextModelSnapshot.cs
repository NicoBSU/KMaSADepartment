// <auto-generated />
using System;
using KMaSA.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KMaSA.Infrastructure.Migrations
{
    [DbContext(typeof(KmasaContext))]
    partial class KmasaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KMaSA.Models.Entities.BlogArticleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("content");

                    b.Property<string>("PicturesLinks")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("pictures_links");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("publication_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_blog_articles");

                    b.ToTable("blog_articles", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_courses");

                    b.ToTable("courses", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.CourseWorkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_course_works");

                    b.HasIndex("MentorId")
                        .HasDatabaseName("ix_course_works_mentor_id");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasDatabaseName("ix_course_works_student_id");

                    b.ToTable("course_works", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.MentorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Biography")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("biography");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("middle_name");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("picture_link");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_mentors");

                    b.ToTable("mentors", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("middle_name");

                    b.Property<string>("PictureLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("picture_link");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.HasIndex("CourseId")
                        .HasDatabaseName("ix_students_course_id");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.StudyResourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Link")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_study_resources");

                    b.ToTable("study_resources", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("description");

                    b.Property<string>("PictureLink")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("picture_link");

                    b.Property<int?>("StudentEntityId")
                        .HasColumnType("int")
                        .HasColumnName("student_entity_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_subjects");

                    b.HasIndex("StudentEntityId")
                        .HasDatabaseName("ix_subjects_student_entity_id");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("MentorEntityStudyResourceEntity", b =>
                {
                    b.Property<int>("PublicationsId")
                        .HasColumnType("int")
                        .HasColumnName("publications_id");

                    b.Property<int>("TaggedMentorsId")
                        .HasColumnType("int")
                        .HasColumnName("tagged_mentors_id");

                    b.HasKey("PublicationsId", "TaggedMentorsId")
                        .HasName("pk_mentor_entity_study_resource_entity");

                    b.HasIndex("TaggedMentorsId")
                        .HasDatabaseName("ix_mentor_entity_study_resource_entity_tagged_mentors_id");

                    b.ToTable("mentor_entity_study_resource_entity", (string)null);
                });

            modelBuilder.Entity("MentorEntitySubjectEntity", b =>
                {
                    b.Property<int>("MentorsId")
                        .HasColumnType("int")
                        .HasColumnName("mentors_id");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int")
                        .HasColumnName("subjects_id");

                    b.HasKey("MentorsId", "SubjectsId")
                        .HasName("pk_mentor_entity_subject_entity");

                    b.HasIndex("SubjectsId")
                        .HasDatabaseName("ix_mentor_entity_subject_entity_subjects_id");

                    b.ToTable("mentor_entity_subject_entity", (string)null);
                });

            modelBuilder.Entity("StudyResourceEntitySubjectEntity", b =>
                {
                    b.Property<int>("LiteratureId")
                        .HasColumnType("int")
                        .HasColumnName("literature_id");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int")
                        .HasColumnName("subjects_id");

                    b.HasKey("LiteratureId", "SubjectsId")
                        .HasName("pk_study_resource_entity_subject_entity");

                    b.HasIndex("SubjectsId")
                        .HasDatabaseName("ix_study_resource_entity_subject_entity_subjects_id");

                    b.ToTable("study_resource_entity_subject_entity", (string)null);
                });

            modelBuilder.Entity("KMaSA.Models.Entities.CourseWorkEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.MentorEntity", "Mentor")
                        .WithMany("CourseWorks")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_works_mentors_mentor_id");

                    b.HasOne("KMaSA.Models.Entities.StudentEntity", "Student")
                        .WithOne("CourseWork")
                        .HasForeignKey("KMaSA.Models.Entities.CourseWorkEntity", "StudentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("fk_course_works_students_student_id");

                    b.Navigation("Mentor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KMaSA.Models.Entities.StudentEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.CourseEntity", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_students_courses_course_id");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("KMaSA.Models.Entities.SubjectEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.StudentEntity", null)
                        .WithMany("Subjects")
                        .HasForeignKey("StudentEntityId")
                        .HasConstraintName("fk_subjects_students_student_entity_id");
                });

            modelBuilder.Entity("MentorEntityStudyResourceEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.StudyResourceEntity", null)
                        .WithMany()
                        .HasForeignKey("PublicationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mentor_entity_study_resource_entity_study_resources_publications_id");

                    b.HasOne("KMaSA.Models.Entities.MentorEntity", null)
                        .WithMany()
                        .HasForeignKey("TaggedMentorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mentor_entity_study_resource_entity_mentors_tagged_mentors_id");
                });

            modelBuilder.Entity("MentorEntitySubjectEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.MentorEntity", null)
                        .WithMany()
                        .HasForeignKey("MentorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mentor_entity_subject_entity_mentors_mentors_id");

                    b.HasOne("KMaSA.Models.Entities.SubjectEntity", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mentor_entity_subject_entity_subjects_subjects_id");
                });

            modelBuilder.Entity("StudyResourceEntitySubjectEntity", b =>
                {
                    b.HasOne("KMaSA.Models.Entities.StudyResourceEntity", null)
                        .WithMany()
                        .HasForeignKey("LiteratureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_study_resource_entity_subject_entity_study_resources_literature_id");

                    b.HasOne("KMaSA.Models.Entities.SubjectEntity", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_study_resource_entity_subject_entity_subjects_subjects_id");
                });

            modelBuilder.Entity("KMaSA.Models.Entities.CourseEntity", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("KMaSA.Models.Entities.MentorEntity", b =>
                {
                    b.Navigation("CourseWorks");
                });

            modelBuilder.Entity("KMaSA.Models.Entities.StudentEntity", b =>
                {
                    b.Navigation("CourseWork")
                        .IsRequired();

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
